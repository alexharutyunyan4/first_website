---
title: "Data Analysis"
editor: visual
echo: false  
message: false 
warning: false
---

```{r}



library(tidyverse)



data <- read.csv("solves.csv")
```




```{r graphic2}
data3 <- data %>%
  filter(Country == c("USA","Canada"))


graphic2 <- ggplot(data3,mapping = aes(x=Fastest.Solve,color = Country, fill = Country)) +
  geom_density(linewidth = 0.75, alpha = 0.007)

graphic2+
 labs(title="North America",
       subtitle="3x3 average",
       x="Fastest Solve",
       y="Frequency",
      caption = "Countries with less than 2 observations not included.")

```




```{r graplic3}

data4 <- data %>%
  filter(Country == c("Brazil","Argentina"))


graphic3<- ggplot(data4,mapping = aes(x=Fastest.Solve,color = Country, fill = Country)) +
  geom_density(linewidth = 0.75, alpha =0.007)

graphic3+
 labs(title="South America",
       subtitle="3x3 average",
       x="Fastest Solve",
       y="Frequency",
       caption = "Countries with less than 2 observations not included." )
```




```{r graphic4}
data5 <- data %>%
  filter(Country == c("Australia" ))



graphic4<- ggplot(data5,mapping = aes(x=Fastest.Solve,color = Country, fill = Country)) +
  geom_density(linewidth = 0.75, alpha = 0.007)

graphic4+
 labs(title="Australia",
       subtitle="3x3 average",
       x="Fastest Solve",
       y="Frequency",
      caption = "Countries with less than 2 observations not included." )
```



```{r graphic5}
data6 <- data %>%
  filter(Country == c("China","Philippines","Taiwan" ))


graphic5<- ggplot(data6,mapping = aes(x=Fastest.Solve,color = Country, fill = Country)) +
 geom_density(bins = 500,alpha=0.5)

graphic5+
 labs(title="
Asia",
       subtitle="3x3 average",
       x="Fastest Solve",
       y="Frequency",
      caption = "Countries with less than 2 observations not included." )
```



```{r graphic6}
data7 <- data %>%
  filter(Country == c("China","Philippines","Georgia","India","Indonesia", "Korea","Malayysia", "Russia","Singapore","Taiwan"))



graphic6 <- ggplot(data7,mapping = aes(x=Fastest.Solve,color = Country, fill = Country))  +
  geom_density(linewidth = 0.75, alpha = 0.007)


graphic6+
 labs(title="Asia",
       subtitle="3x3 average",
       x="Fastest Solve",
       y="Frequency",
      caption = "Countries with less than 2 observations not included.")

```



```{r graphic7}
data8 <- data %>%
  filter(Country == c( "Denmark","Netherlands","Poland"))



graphic7<- ggplot(data8,mapping = aes(x=Fastest.Solve,color = Country, fill = Country)) +
 geom_density(bins = 500,alpha=0.5)

graphic7+
 labs(title="Europe",
       subtitle="3x3 average",
       x="Fastest Solve",
       y="Frequency",
      caption = "Countries with less than 2 observations not included." )
       
```



```{r graphic8}

data9 <- data %>%
  filter(Country == c( "Denmark","Netherlands","Poland","Finland","France","Germany","Lithuania","Norway", "United Kingdom", "Switzerland","Sweaden","Spain"))


graphic8 <- ggplot(data9,mapping = aes(x=Fastest.Solve,color = Country, fill = Country))  +
  geom_density(linewidth = 0.75, alpha = 0.007)

graphic8+
      labs(title="Europe",
        subtitle="3x3 average",
       x="Person",
       y="Fastest.solve",
     caption = "Countries with less than 2 observations not included.")
       

```



```{r graphic9}
library(dplyr)
library(stringr)
library(ggplot2)
library(maps)

world <- map_data("world")
head(world)

##        long      lat group order region subregion
## 1 -69.89912 12.45200     1     1  Aruba      <NA>
## 2 -69.89571 12.42300     1     2  Aruba      <NA>
## 3 -69.94219 12.43853     1     3  Aruba      <NA>
## 4 -70.00415 12.50049     1     4  Aruba      <NA>
## 5 -70.06612 12.54697     1     5  Aruba      <NA>
## 6 -70.05088 12.59707     1     6  Aruba      <NA>

world <- map_data("world")
worldplot <- ggplot() +
  geom_polygon(data = world, aes(x=long, y = lat, group = group)) + 
  coord_fixed(1.3)

map_data <- read.csv("solves.csv", header = TRUE)
map_data <- map_data %>%
  mutate(region = Country)

map_data <- map_data %>% 
   group_by(region) %>% 
   slice_min(order_by = Fastest.Solve)



## Check for disagreements between the two datasets
diff <- setdiff(world$region, map_data$region)

## Korea -> South Korea
## United Kingdom -> UK
## 


## Clean the dataset accordingly
map_data <- map_data %>%
  ## Recode certain entries
  mutate(region = recode(str_trim(region), "United Kingdom" = "UK",
                            "Korea" = "South Korea",
                            "Congo (Dem. Rep.)" = "Democratic Republic of the Congo",
                            "Congo (Rep.)" = "Republic of Congo")) 

worldSubset <- inner_join(world, map_data, by = "region")




## Let's ditch many of the unnecessary elements
plain <- theme(
  axis.text = element_blank(),
  axis.line = element_blank(),
  axis.ticks = element_blank(),
  panel.border = element_blank(),
  panel.grid = element_blank(),
  axis.title = element_blank(),
  panel.background = element_rect(fill = "white"),
  plot.title = element_text(hjust = 0.5)
)

solve <- ggplot(data = worldSubset, mapping = aes(x = long, y = lat, group = group)) + 
  coord_fixed(1.3) +
  geom_polygon(aes(fill = Fastest.Solve)) +
  scale_fill_distiller(palette ="RdBu", direction = -1) + # or direction=1
  ggtitle("Solves by Country") +
  plain

solve


```
